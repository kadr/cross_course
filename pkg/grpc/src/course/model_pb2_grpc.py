# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from course import model_pb2 as course_dot_model__pb2


class CourseServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCourse = channel.unary_unary(
                '/CourseService/GetCourse',
                request_serializer=course_dot_model__pb2.GetCourseRequest.SerializeToString,
                response_deserializer=course_dot_model__pb2.GetCourseResponse.FromString,
                )
        self.GetCourses = channel.unary_unary(
                '/CourseService/GetCourses',
                request_serializer=course_dot_model__pb2.GetCoursesRequest.SerializeToString,
                response_deserializer=course_dot_model__pb2.GetCoursesResponse.FromString,
                )
        self.AddCourse = channel.unary_unary(
                '/CourseService/AddCourse',
                request_serializer=course_dot_model__pb2.AddCourseRequest.SerializeToString,
                response_deserializer=course_dot_model__pb2.GetCourseResponse.FromString,
                )
        self.CalcCourse = channel.unary_unary(
                '/CourseService/CalcCourse',
                request_serializer=course_dot_model__pb2.CalcCourseRequest.SerializeToString,
                response_deserializer=course_dot_model__pb2.GetCourseResponse.FromString,
                )


class CourseServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCourse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCourses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCourse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalcCourse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CourseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCourse': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCourse,
                    request_deserializer=course_dot_model__pb2.GetCourseRequest.FromString,
                    response_serializer=course_dot_model__pb2.GetCourseResponse.SerializeToString,
            ),
            'GetCourses': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCourses,
                    request_deserializer=course_dot_model__pb2.GetCoursesRequest.FromString,
                    response_serializer=course_dot_model__pb2.GetCoursesResponse.SerializeToString,
            ),
            'AddCourse': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCourse,
                    request_deserializer=course_dot_model__pb2.AddCourseRequest.FromString,
                    response_serializer=course_dot_model__pb2.GetCourseResponse.SerializeToString,
            ),
            'CalcCourse': grpc.unary_unary_rpc_method_handler(
                    servicer.CalcCourse,
                    request_deserializer=course_dot_model__pb2.CalcCourseRequest.FromString,
                    response_serializer=course_dot_model__pb2.GetCourseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CourseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CourseService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCourse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseService/GetCourse',
            course_dot_model__pb2.GetCourseRequest.SerializeToString,
            course_dot_model__pb2.GetCourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCourses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseService/GetCourses',
            course_dot_model__pb2.GetCoursesRequest.SerializeToString,
            course_dot_model__pb2.GetCoursesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCourse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseService/AddCourse',
            course_dot_model__pb2.AddCourseRequest.SerializeToString,
            course_dot_model__pb2.GetCourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalcCourse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseService/CalcCourse',
            course_dot_model__pb2.CalcCourseRequest.SerializeToString,
            course_dot_model__pb2.GetCourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
